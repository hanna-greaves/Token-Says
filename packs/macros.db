{"_id":"4HgrzXrfYA8WCvAP","name":"Toggle Active","type":"script","author":"34e8q3LtkGyRJL2s","img":"icons/svg/dice-target.svg","scope":"global","command":"await tokenSays.toggleActivate()\nconst active = game.settings.get('token-says', 'isActive')\nconst message = `Token Says is now ${active ? 'active' : 'inactive'}.`\nui.notifications?.info(message)","folder":null,"sort":0,"flags":{},"ownership":{"default":0}}
{"_id":"5BeAT2T8EKJoMGmO","name":"Trigger a Macro (API) Action Saying","type":"script","author":"34e8q3LtkGyRJL2s","img":"icons/svg/dice-target.svg","scope":"global","command":"/**\n * .says()\n * TRIGGERS A SAYING IN YOUR WORLD\n * THE SAYING MUST HAVE AN ACTION TYPE = 'MACRO (API)' IN ORDER TO BE TRIGGERED\n * this macro details how the .says() API call can be used\n */\n\n//const tokenId = canvas.tokens.controlled[0]?.id; //uncomment this and comment put the const tokenId below to run this for the currently controlled token\nconst tokenId = ''; //either this or the actorId is required. replace with a token's id e.g. \"9lj8fiuxUtY5yFre\"\nconst actorId = ''; //either this or the tokenId is required. replace with a actor's id e.g. \"9lj8fiuxUtY5yFre\"\nconst sayingName = ''; //this must match the name of a saying that you have added to your world that is of action type = 'Macro (API)'\n\n//warnings only included for learning purposes\nif(!tokenId && !actorId) ui.notifications?.error(\"You must provide a token ID or actor ID\")\nif(!sayingName) ui.notifications?.error(\"You must provide a saying name\")\n\nawait tokenSays.says(tokenId, actorId, sayingName);","folder":null,"sort":0,"flags":{},"ownership":{"default":0}}
{"_id":"jTcQwzJRaIHXiZvP","name":"Generate Saying Dynamically","type":"script","author":"34e8q3LtkGyRJL2s","img":"icons/svg/dice-target.svg","scope":"global","command":"/**\n * .saysDirect() \n * ASYNC\n * TRIGGERS A SAYING WHERE YOU PROVIDE ALL THE DATA NEEDED FOR THE SAYING WITHIN THE MACRO \n * (DOES NOT REQUIRE THE SAYING TO BE IN YOUR WORLD)\n * this macro details how the .saysDirect() API call can be used\n */\n\nconst tokenId = canvas.tokens.controlled[0]?.id; //runs this for the currently controlled token\n//const tokenId = ''; //either this or the actorId is required. replace with a token's id e.g. \"9lj8fiuxUtY5yFre\"\nconst actorId = ''; //either this or the tokenId is required. replace with a actor's id e.g. \"9lj8fiuxUtY5yFre\"\nconst sceneId = ''; //provide a scene id or leave blank in order to use the current scene\n\n/**\n * audio (optional) - object holding audio related data, used for generating the audio\n *    compendium - (optional) the compendium where the playlist is stored (e.g. 'token-says.token-says-macros'). Not required if playlist is in world\n *    source - (optional) the name of the playlist. Will generate a track randomly from the playlist unless quote is also provided. Either this or the quote needs to be provided in order to generate audio.\n *    quote - (optional) if source is filled in, then this is the name of the track in the playlist. If source is not filled in, then this is the file path to the audio file. Either this or the quote needs to be provided in order to generate audio.\n * chat (optional) - object holding chat related data, used for generating chat message and chat bubble\n *    compendium - (optional) the compendium where the rollable table is stored (e.g. 'token-says.token-says-macros'). Not required if rollable table is in world\n *    source - (optional) the name of the rollable table. Will generate a saying randomly from the table. Either this or the quote needs to be provided in order to generate a chat message or bubble.\n *    quote - (optional) what is actually said. Either this or the quote needs to be provided in order to generate a chat message or bubble.\n * delay (optional) - default 0. in ms, inserts a delay between the triggering of the api call and when the saying is played.\n * lang (optional) - the language to be used. Provide the code (e.g. 'common'). Requires Polyglot and token must actual be able to speak the language\n * likelihood (optional) - defaults to 100. The percent likelihood that saying will actually play when triggered. Must be between 0 and 100\n * suppress (optional) - suppress certain elements that the saying generates\n *      bubble: default false. If set to true will not generate the chat bubble\n *      message: default false. If set to true will not generate the chat message\n *      quotes: default false. If set to true will not wrap the chat message in quotes\n * volume (optional) - defaults to 0.50. sets the volume played for the audio file. Must be between 0.01 and 1.00\n */\nconst options = {\n    audio: {\n        compendium: '',\n        source: '',\n        quote: ''\n    },\n    chat: {\n        compendium: '',\n        source: '',\n        quote: 'Hello World!'\n    },\n    delay: 0,\n    lang: '',\n    likelihood: 100,\n    suppress: {\n        bubble: false,\n        message: false,\n        quotes: false\n    },\n    volume: 0.50\n}\n\n//warnings only included for learning purposes\nif(!tokenId && !actorId) ui.notifications?.error(\"You must provide a token ID or actor ID\")\n\ntokenSays.saysDirect(tokenId, actorId, sceneId, options)","folder":null,"sort":0,"flags":{},"ownership":{"default":0}}